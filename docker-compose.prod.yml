version: '3.8'

services:
  bedrijfsanalyse-api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: bedrijfsanalyse-api-prod
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=INFO
      - APP_NAME=bedrijfsanalyse-api
      - APP_VERSION=1.0.0
      
      # External API Keys (set in .env file)
      - KVK_API_KEY=${KVK_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # Authentication
      - API_KEYS=${API_KEYS:-prod-api-key-123456789012345678901234567890}
      
      # Rate limiting
      - RATE_LIMIT_REQUESTS=200
      - RATE_LIMIT_WINDOW=3600
      
      # Timeouts
      - KVK_TIMEOUT=10
      - RECHTSPRAAK_TIMEOUT=10
      - OPENAI_TIMEOUT=30
      - ANALYSIS_TIMEOUT_STANDARD=30
      - ANALYSIS_TIMEOUT_DEEP=60
      
      # Feature flags
      - ENABLE_LEGAL_SERVICE=true
      - ENABLE_NEWS_SERVICE=true
      - ENABLE_METRICS_COLLECTION=true
      - ENABLE_TRACING=true
      - ENABLE_ALERTING=true
      
      # Crawl4AI configuration
      - CRAWL4_AI_BASE_DIRECTORY=/app/data/crawl4ai
      - CRAWL4AI_DB_PATH=/app/data/crawl4ai/database.db
      - CRAWL4AI_CACHE_DIR=/app/data/crawl4ai/cache
      - HOME=/app
      
      # Monitoring
      - HEALTH_CHECK_INTERVAL=60
      - PROMETHEUS_METRICS_ENABLED=true
      
      # Cost tracking
      - DAILY_COST_BUDGET_EUR=50.0
      - KVK_COST_PER_REQUEST=0.01
      - OPENAI_COST_PER_1K_TOKENS=0.03
      
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - bedrijfsanalyse-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: bedrijfsanalyse-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bedrijfsanalyse-network
    restart: unless-stopped
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: bedrijfsanalyse-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - bedrijfsanalyse-network
    restart: unless-stopped
    depends_on:
      - bedrijfsanalyse-api
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  bedrijfsanalyse-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
